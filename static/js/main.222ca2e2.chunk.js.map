{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/FeedBackOptions/FeedBackOptions.styled.jsx","components/FeedBackOptions/FeedBackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["MySection","styled","section","Section","title","children","className","MyP","p","Notification","notice","Btn","button","FeedBackOpt","onLeaveFeedback","btnNames","reset","map","btn","type","name","onClick","MyStatistics","div","Statistics","good","neutral","bad","total","positive","initialState","App","state","onHandleClick","e","target","setState","totalAmount","positivePercentage","Math","round","arrFeedback","Object","keys","this","FeedBackOptions","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SACaA,EAAYC,IAAOC,QAAV,2I,OCePC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACL,EAAD,WACE,oBAAIM,UAAU,QAAd,SAAuBF,IACtBC,MCLME,EAAMN,IAAOO,EAAV,yNCODC,EANM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACI,cAACH,EAAD,UAAMG,KCHDC,EAAMV,IAAOW,OAAV,oVCyBDC,EAvBK,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,gBAAgBC,EAAoB,EAApBA,SAAoB,EAAXC,MAC3C,OACI,mCACKD,EAASE,KAAI,SAAAC,GAAG,OACb,cAACP,EAAD,CAEIQ,KAAK,SACLC,KAAMF,EACNG,QAASP,EAJb,SAMKI,GALIA,SCPZI,EAAerB,IAAOsB,IAAV,qLCcVC,EAZI,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAC1C,OACI,eAACP,EAAD,WACI,0CAAcG,EAAd,OACA,6CAAiBC,EAAjB,OACA,yCAAaC,EAAb,OACA,2CAAeC,EAAf,OACA,8CAAkBC,EAAlB,YCJNC,EAAe,CACnBL,KAAM,EACNC,QAAS,EACTC,IAAK,GAEcI,E,4MACnBC,MAAQF,E,EAERG,cAAgB,SAACC,GACf,IAAMd,EAAOc,EAAEC,OAAOf,KACtB,EAAKgB,UAAS,iCACXhB,EAAO,EAAKY,MAAMZ,GAAQ,O,EAI/BiB,YAAc,WAAO,IAAD,EACa,EAAKL,MACpC,OAFkB,EACVP,KADU,EACJC,QADI,EACKC,K,EAIzBW,mBAAqB,WAAO,IAClBb,EAAS,EAAKO,MAAdP,KACR,OAAOc,KAAKC,MAAOf,EAAO,EAAKY,cAAiB,M,4CAGlD,WACE,IAAMI,EAAcC,OAAOC,KAAKC,KAAKZ,OAD9B,EAEwBY,KAAKZ,MAA5BP,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAACyC,EAAD,CACE/B,gBAAiB8B,KAAKX,cACtBlB,SAAU0B,MAGd,cAAC,EAAD,CAASrC,MAAM,aAAf,SACGwC,KAAKP,cACJ,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKP,cACZR,SAAUe,KAAKN,uBAGjB,cAAC,EAAD,CAAc5B,OAAO,+B,GA1CAoC,aCNjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.222ca2e2.chunk.js","sourcesContent":["import styled from '@emotion/styled'\nexport const MySection = styled.section`\n\n\n padding: 20px;\n \n  .title {\n    \n  font-size: 24px;\n  line-height: 1.14;\n  margin-bottom: 20px;\n}\n`","import PropTypes from 'prop-types';\nimport { MySection } from './Section.styled';\nconst Section = ({ title, children }) => {\n  return (\n    <MySection>\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </MySection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;","import styled from \"@emotion/styled\";\r\nexport const MyP = styled.p`\r\ntext-align: center;\r\nbackground-color: ;\r\nfont-size: 30px;\r\ncolor: red;\r\nfont-family: sans-serif\t;\r\nfont-family:fantasy;\r\ntext-shadow: 1px 1px 1px black,\r\n             2px 2px 1px black;\r\n`","import React from 'react';\nimport {MyP} from './Notification.styled'\nconst Notification = ({notice}) => {\n    return (\n        <MyP>{notice}</MyP>\n    );\n}\n\nexport default Notification;","import styled from '@emotion/styled'\nexport const Btn = styled.button`\n\n width:100%; \n\n  text-align: center;\n  color: dimgrey;\n  padding: 10px 20px;\n  background-color: snow;\n  border: 2px solid aqua;\n  border-radius: 5px;\n  box-shadow: 2px 3px 4px rgba(0, 0, 0, 0.6);\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  &:hover {\n    background-color: #69ffd2;\n   \n` ","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Btn} from './FeedBackOptions.styled'\nconst FeedBackOpt = ({onLeaveFeedback,btnNames,reset}) => {\n    return (\n        <>\n            {btnNames.map(btn => (\n                <Btn\n                    key={btn}\n                    type=\"button\"\n                    name={btn}\n                    onClick={onLeaveFeedback}\n                >\n                    {btn}\n                </Btn>\n            ))}\n            \n        </>\n    );\n}\n\nFeedBackOpt.propTypes = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n    btnNames:PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n}\n\nexport default FeedBackOpt;","import styled from '@emotion/styled'\nexport const MyStatistics = styled.div`\n\n    span{\n        font-family: \"Roboto\", \"sans-serif\";\n  font-size: 18px;\n  line-height: 1.14;\n  color: dimgrey;\n  margin-bottom: 10px;\n\n    }\n`","import React from 'react';\nimport { MyStatistics } from './Statistics.styled';\nimport PropTypes from 'prop-types'\nconst Statistics = ({good,neutral, bad, total,positive}) => {\n    return (\n        <MyStatistics>\n            <span>Good: { good} </span>\n            <span>Neutral: { neutral} </span>\n            <span>Bad: { bad} </span>\n            <span>Total: { total} </span>\n            <span>Positive: { positive} %</span>\n        </MyStatistics>\n    );\n}\n\nexport default Statistics;\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positive: PropTypes.number.isRequired}","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Section from \"./components/Section/Section.jsx\";\nimport Notification from \"./components/Notification/Notification\";\nimport FeedBackOptions from \"./components/FeedBackOptions/FeedBackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nconst initialState = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\nexport default class App extends Component {\n  state = initialState;\n\n  onHandleClick = (e) => {\n    const name = e.target.name;\n    this.setState(() => ({\n      [name]: this.state[name] + 1,\n    }));\n  };\n\n  totalAmount = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positivePercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.totalAmount()) * 100);\n  };\n\n  render() {\n    const arrFeedback = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions\n            onLeaveFeedback={this.onHandleClick}\n            btnNames={arrFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.totalAmount() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.totalAmount()}\n              positive={this.positivePercentage()}\n            />\n          ) : (\n            <Notification notice=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}